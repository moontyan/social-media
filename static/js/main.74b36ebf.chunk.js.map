{"version":3,"sources":["assets/images/preloader.svg","components/common/Textarea/Textarea.module.css","serviceWorker.js","components/Nav/Nav.jsx","components/DialogsPage/DialogPreview/DialogPreview.jsx","components/DialogsPage/DialogMessages/IncomingMessage/IncomingMessage.jsx","components/DialogsPage/DialogMessages/OutgoingMessage/OutgoingMessage.jsx","components/DialogsPage/DialogMessages/DialogMessages.jsx","components/DialogsPage/DialogInput/DialogInput.jsx","components/DialogsPage/DialogInput/DialogInputContainer.jsx","components/DialogsPage/DialogsPage.jsx","hoc/withAuthRedirect.js","redux/dialogs-reducer.js","components/DialogsPage/DialogsPageContainer.jsx","api/api.js","redux/users-reducer.js","redux/user-selectors.js","components/FindUsers/User/User.jsx","components/common/Preloader/Preloader.jsx","components/FindUsers/Paginator.jsx","components/FindUsers/FindUsers.jsx","components/FindUsers/FindUsersContainer.jsx","components/Profile/ProfileHeader/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileHeader/ProfileHeader.jsx","components/Profile/ProfilePosts/Post/Post.jsx","components/Profile/ProfilePosts/ProfilePosts.jsx","components/Profile/ProfilePosts/ProfilePostsContainer.jsx","utils/validators/validators.js","components/common/Textarea/Textarea.jsx","components/Profile/ProfileInput/ProfileInput.jsx","components/Profile/ProfileInput/ProfileInputContainer.jsx","components/Profile/ProfileFriends/Friend/Friend.jsx","components/Profile/ProfileFriends/ProfileFriends.jsx","components/Profile/ProfileFriends/ProfileFriendsContainer.jsx","components/Profile/Profile.jsx","redux/profile-reducer.js","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/redux-store.js","index.js","assets/images/user.png"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","icon","faUser","to","faEnvelope","faCommentAlt","href","faMusic","faUsers","DialogPreview","props","src","profileImg","alt","profileName","IncomingMessage","message","OutgoingMessage","outMessage","DialogMessages","outMessagesElement","map","m","DialogInput","onSubmit","handleSubmit","Field","component","name","placeholder","faPaperPlane","DialogInputContainer","connect","state","newMessageText","dialogsPage","MessagesReduxForm","reduxForm","form","DialogsPage","dialogElements","dialogs","dialog","id","messageElements","messages","outMessages","values","addMessage","messageTextarea","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","initialState","dialogsReducer","action","type","newMessage","messagaData","compose","axiosInstance","Axios","create","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","then","response","data","post","delete","profileAPI","userId","status","put","authAPI","email","password","rememberMe","users","totalUsersCount","isFetching","followingInProgress","toggleIsFetching","toggleFollowingInProgress","inProgress","usersReducer","user","followed","totalCount","filter","selectUsers","usersPage","selectPageSize","selectTotalUsersCount","selectCurrentPage","selectIsFetching","selectFollowingInProgress","User","followStatus","disabled","some","onClick","unfollowUser","followUser","Preloader","preloader","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","p","onPageChange","key","FindUsers","setCurrentPage","getUsers","u","photos","small","userPhoto","dispatch","items","resultCode","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileHeader","profile","large","fullName","lookingForAJobDescription","aboutMe","Post","text","ProfilePosts","postElements","posts","ProfilePostsContainer","profilePage","required","Textarea","maxLength","input","meta","touched","error","styles","formValidation","maxLength10","length","ProfileInput","rows","cols","validate","ProfileInputContainer","newPostText","Friend","ProfileFriends","friendElements","friends","friend","ProfileFriendsContainer","PostsReduxForm","Profile","addPost","postTextarea","setProfileStatus","profileReducer","newPost","postData","postId","ProfileContainer","params","loggedUserId","setProfile","getStatus","withRouter","Header","login","logOut","faSignOutAlt","setUserData","setUser","authReducer","HeaderContainer","LoginForm","LoginReduxForm","logIn","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","path","render","DialogsPageContainer","FindUsersContainer","app","require","createStore","combineReducers","applyMiddleware","store","formReducer","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.74b36ebf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.48d27090.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formValidation\":\"Textarea_formValidation__tZnbS\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport './Nav.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCommentAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"nav-links\">\r\n        <ul>\r\n          <li>\r\n            <FontAwesomeIcon icon={faUser} />\r\n            <NavLink to=\"/profile\">Profile</NavLink>\r\n          </li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faEnvelope} />\r\n            <NavLink to=\"/dialogs\">Messages</NavLink>\r\n          </li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faCommentAlt} />\r\n            <a href=\"#\">News</a>\r\n          </li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faMusic} />\r\n            <a href=\"#\">Music</a>\r\n          </li>\r\n          <li>\r\n            <FontAwesomeIcon icon={faUsers} />\r\n            <NavLink to=\"/users\">Find Users</NavLink>\r\n          </li>\r\n        </ul>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './DialogPreview.css';\r\n\r\nfunction DialogPreview(props) {\r\n    return (\r\n        <div className=\"dialog-item\">\r\n            <div className=\"dialog-image\">\r\n                <img src={props.profileImg} alt=\"user\"></img>\r\n            </div>\r\n            <div className=\"dialog-info\">\r\n                <p className=\"dialog-username\">{props.profileName}</p>\r\n                <p className=\"dialog-text\">1 new message</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogPreview;","import React from 'react';\r\nimport './IncomingMessage.css';\r\n\r\n\r\nfunction IncomingMessage(props) {\r\n    return (\r\n        <div className=\"incoming-message\">\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomingMessage;","import React from 'react';\r\nimport './OutgoingMessage.css';\r\n\r\n\r\nfunction OutgoingMessage(props) {\r\n    return (\r\n        <div className=\"outgoing-message\">\r\n            <p>{props.outMessage}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OutgoingMessage;","import React from 'react';\r\nimport './DialogMessages.css';\r\nimport IncomingMessage from './IncomingMessage/IncomingMessage';\r\nimport OutgoingMessage from './OutgoingMessage/OutgoingMessage';\r\n\r\n\r\n\r\nfunction DialogMessages(props) {\r\n    \r\n    \r\n\r\n    let outMessagesElement = props.outMessage.map( m => <OutgoingMessage outMessage={m.message}/>);\r\n\r\n    return (\r\n        <div className=\"dialog-window\">\r\n            <div className=\"dialog-header\">\r\n                <img src={props.profileImg} alt=\"dialog-avatar\"></img>\r\n                <p>{props.profileName}</p>\r\n            </div>\r\n            <div className=\"message-window\">\r\n                <IncomingMessage message={props.message}/>\r\n                {outMessagesElement}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogMessages;","import React from 'react';\r\nimport './DialogInput.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\nimport { Field } from 'redux-form';\r\n\r\n\r\nfunction DialogInput(props) {\r\n    \r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"send-block\">\r\n                \r\n                <Field component=\"textarea\" name=\"messageTextarea\" placeholder=\"Say hi\"></Field>\r\n                <button ><FontAwesomeIcon icon={faPaperPlane} /></button>\r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default DialogInput;","import './DialogInput.css';\r\nimport DialogInput from './DialogInput';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText : state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nconst DialogInputContainer = connect(mapStateToProps)(DialogInput);\r\n\r\nexport default DialogInputContainer;","import React from 'react';\r\nimport './DialogsPage.css';\r\nimport DialogPreview from './DialogPreview/DialogPreview';\r\nimport DialogMessages from './DialogMessages/DialogMessages';\r\nimport DialogInputContainer from './DialogInput/DialogInputContainer';\r\nimport { reduxForm } from 'redux-form'\r\n\r\nfunction DialogsPage(props) {\r\n    let dialogElements = props.dialogs.map( dialog => <DialogPreview id={dialog.id} profileName={dialog.profileName} profileImg={dialog.profileImg}/>)\r\n    \r\n\r\n    let messageElements = props.messages.map( message => <DialogMessages id={message.id} profileImg={message.profileImg} profileName={message.profileName} message={message.message} outMessage={props.outMessages} />)\r\n    \r\n    const onSubmit = (values) => {\r\n        props.addMessage(values.messageTextarea)\r\n    }\r\n    return (\r\n        <div className=\"dialogs-page\">\r\n            <div className=\"dialogs-minimized\">\r\n                {dialogElements}\r\n            </div>\r\n            <div className=\"messages-container\">\r\n                {messageElements}\r\n                <MessagesReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nlet MessagesReduxForm = reduxForm({form: 'messages'})(DialogInputContainer)\r\n\r\nexport default DialogsPage;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 2, profileImg: 'https://myhero.com/images/guest/g293101/hero114688/Otto-von-Bismarck-1-4.jpg', profileName: 'Otto Von Bismarck' },\r\n        { id: 1, profileImg: 'https://www.biography.com/.image/t_share/MTY2NjgyMzA1MzM3NzYyODcx/gettyimages-51242589-2048x2048.jpg', profileName: 'Julius Caesar' }\r\n    ],\r\n    messages: [\r\n        { id: 1, profileName: 'Julius Caesar', message: 'Hello, i wrote you a poem! Lorem, ipsum dolor sit amet consectetur adipisicing elit. Magnam libero est quasi repudiandae assumenda facere. Id facilis officia distinctio. Temporibus iste sunt in. Eum odio iusto ipsa rem ea recusandae!', profileImg: 'https://www.biography.com/.image/t_share/MTY2NjgyMzA1MzM3NzYyODcx/gettyimages-51242589-2048x2048.jpg' },\r\n        { id: 2, profileName: 'Otto Von Bismarck', message: 'Hello, there!', profileImg: 'https://myhero.com/images/guest/g293101/hero114688/Otto-von-Bismarck-1-4.jpg' }\r\n    ],\r\n    outMessages: [\r\n        { message: 'Thank you, very cool!' },\r\n        { message: 'Hello!' }\r\n    ]\r\n}\r\n\r\nexport function dialogsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                message: action.messagaData\r\n            };\r\n            return {\r\n                ...state,\r\n                outMessages: [...state.outMessages, newMessage],\r\n            };\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addMessage = (messagaData) => {\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        messagaData\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import { connect } from 'react-redux';\r\nimport DialogsPage from './DialogsPage';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessage } from '../../redux/dialogs-reducer'\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs : state.dialogsPage.dialogs,\r\n        messages : state.dialogsPage.messages,\r\n        outMessages : state.dialogsPage.outMessages\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(withAuthRedirect, \r\n    connect(mapStateToProps, { addMessage }))(DialogsPage);","import Axios from 'axios';\r\n\r\nconst axiosInstance = Axios.create({\r\n    baseURL : 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials : true,\r\n    headers: {\"API-KEY\": \"62903d90-a3ee-4296-bb19-40e17fbc2a7f\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\r\n    },\r\n\r\n    followUser(id) {\r\n        return axiosInstance.post(`follow/${id}`, {}).then(response => response.data)\r\n    },\r\n\r\n    unfollowUser(id){\r\n        return axiosInstance.delete(`follow/${id}`).then(response => response.data)\r\n    },\r\n    setUser() {\r\n        return axiosInstance.get(`auth/me`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setProfile(userId){\r\n        return axiosInstance.get(`profile/`+ userId).then(response => response.data)\r\n    },\r\n    getStatus(userId){\r\n        return axiosInstance.get(`profile/status/` + userId).then(response => response.data)\r\n    },\r\n    updateStatus(status){\r\n        return axiosInstance.put(`profile/status`, { status : status})\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    logIn(email, password, rememberMe = false) {\r\n        return axiosInstance.post(`auth/login`, {email, password, rememberMe}).then(response => response.data)\r\n    },\r\n    logOut() {\r\n        return axiosInstance.delete(`auth/login`).then(response => response.data)\r\n    }\r\n}\r\n","import { usersAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE-FOLLOWING-IN-PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n\r\n    ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nfunction usersReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: true }\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n\r\n                    return user;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.inProgress === true ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUserCount = (totalCount) => {\r\n    return {\r\n        type: SET_TOTAL_COUNT,\r\n        totalCount\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleFollowingInProgress = (inProgress, userId) => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n        inProgress,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUserCount(data.totalCount))\r\n        })\r\n    }\r\n}\r\n\r\nexport const followUser = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id))\r\n        usersAPI.followUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(follow(id))\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, id))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollowUser = (id) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingInProgress(true, id))\r\n        usersAPI.unfollowUser(id)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(unfollow(id))\r\n                }\r\n                dispatch(toggleFollowingInProgress(false, id))\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReducer;","export const selectUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const selectPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const selectTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const selectCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const selectIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const selectFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './User.css';\r\n\r\nfunction User(props) {\r\n    return (\r\n        <div className=\"user\">\r\n                <div className='user-header'>\r\n                    <div className=\"user-img\">\r\n                        <NavLink to={'/profile/' + props.id}>\r\n                        <img src={props.profileImg} alt=\"user\"></img>\r\n                        </NavLink>   \r\n                    </div>\r\n                    <div className=\"follow-btn\">\r\n                        {props.followStatus ? \r\n                        <button disabled={ props.followingInProgress.some(id => id === props.id) } \r\n                                onClick={ () => { props.unfollowUser(props.id) } }>Unfollow</button> : \r\n                        <button disabled={props.followingInProgress.some(id => id === props.id) } \r\n                                onClick={ () => { props.followUser(props.id) } }>Follow</button> }\r\n                    </div>\r\n                </div>\r\n                <div className=\"user-content\">\r\n                    <div className=\"user-info-container\">\r\n                        <p>{props.name}</p>\r\n                        <p>{'props.location.country'}, {'props.location.city'}</p>\r\n                    </div>\r\n                    <div className=\"user-status\">\r\n                        <p>{props.status}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport './Preloader.css'\r\nimport preloader from '../../../assets/images/preloader.svg'\r\n\r\nfunction Preloader() {\r\n    return(\r\n        <div className=\"preloader\">\r\n            <img src={preloader} alt=\"preloader-gif\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React, { useState } from 'react'\r\n\r\nfunction Paginator(props) {\r\n    \r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * props.portionSize\r\n    \r\n    return (\r\n        <div className=\"pages\">\r\n            {portionNumber > 1 ? <span className=\"arrow-btn\" onClick={() => setPortionNumber(portionNumber - 1)}>&larr;</span> : null}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => { return <span onClick={() => { props.onPageChange(p) }} key={p} className={props.currentPage === p ? \"page-active\" : \"page\"}>{p}</span> })}\r\n            {portionNumber < portionCount ? <span className=\"arrow-btn\" onClick={() => setPortionNumber(portionNumber + 1)}>&rarr;</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport './FindUsers.css';\r\nimport User from './User/User'\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport Preloader from '../common/Preloader/Preloader'\r\nimport Paginator from './Paginator';\r\n\r\n\r\nclass FindUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChange = (p) => {\r\n        this.props.setCurrentPage(p);\r\n        this.props.getUsers(p, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"find-users-page\">\r\n                <div className=\"find-users-title\">\r\n                    <h1>Discover</h1>\r\n                </div>\r\n                <Paginator totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize} currentPage={this.props.currentPage} onPageChange={this.onPageChange} portionSize={10}/>\r\n                {this.props.isFetching ? <Preloader /> : null}\r\n                <div className=\"users-container\">\r\n                    {this.props.users.map(u => <User id={u.id} followStatus={u.followed} name={u.name} \r\n                    profileImg={u.photos.small != null ? u.photos.small : userPhoto} location={u.location} \r\n                    status={u.status} followingInProgress={this.props.followingInProgress} followUser={this.props.followUser} unfollowUser={this.props.unfollowUser} />)}\r\n                </div>\r\n                <div className=\"more-btn\">\r\n                    <button>Show More</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindUsers;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { setCurrentPage, getUsers, followUser, unfollowUser } from '../../redux/users-reducer';\r\nimport { selectUsers, selectPageSize, selectTotalUsersCount, selectCurrentPage, selectIsFetching, selectFollowingInProgress} from '../../redux/user-selectors'\r\nimport FindUsers from './FindUsers';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users : selectUsers(state),\r\n        pageSize : selectPageSize(state),\r\n        totalUsersCount : selectTotalUsersCount(state),\r\n        currentPage : selectCurrentPage(state),\r\n        isFetching : selectIsFetching(state),\r\n        followingInProgress : selectFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(withAuthRedirect,\r\n    connect(mapStateToProps, { setCurrentPage, getUsers, followUser, unfollowUser }))(FindUsers)","import React, { useEffect, useState } from 'react'\r\n\r\n\r\nfunction ProfileStatusWithHooks(props) {\r\n    \r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n    \r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {editMode ? <div>\r\n                <input autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode} type='text' value={status}></input>\r\n            </div> : <div>\r\n                    <p onClick={activateEditMode} >{props.status || 'Enter your status'}</p>\r\n                </div>}\r\n        </div>\r\n    )\r\n    /*state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n        )\r\n    }\r\n*/\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport './ProfileHeader.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\nfunction ProfileHeader(props) {\r\n    if (!props.profile) {\r\n        return (<Preloader />)\r\n      }\r\n    \r\n    return (\r\n        <div className=\"profile-header\">\r\n            <div className=\"profile-picture\">\r\n                <img src={props.profile.photos.large === null ? userPhoto :  props.profile.photos.large} alt=\"profile-avatar\" />\r\n            </div>\r\n            <div className=\"profile-info\">\r\n                <div className=\"name-surname\">\r\n                    <p>{props.profile.fullName}</p>\r\n                </div>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div className=\"more-info\">\r\n                    <ul>\r\n                        <li>Looking for a job:</li>\r\n                        <li>About Me:</li>\r\n                        <li>City:</li>\r\n                    </ul>\r\n                    <ul className=\"user-info\">\r\n                        <li className=\"user-job\">{props.profile.lookingForAJobDescription}</li>\r\n                        <li className=\"user-about-me\">{props.profile.aboutMe}</li>\r\n                        <li className=\"user-city\">Kiev</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileHeader;","import React from 'react';\r\nimport './Post.css';\r\nimport userPhoto from '../../../../assets/images/user.png'\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className=\"post-item\">\r\n            <div className=\"post-image\">\r\n                <img src={userPhoto} alt=\"user\"></img>\r\n            </div>\r\n            <div className=\"post-info\">\r\n                <p className=\"post-username\">{props.profileName}</p>\r\n                <p className=\"post-text\">{props.text}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './ProfilePosts.css';\r\nimport Post from './Post/Post';\r\n\r\nfunction ProfilePosts(props) {\r\n    let postElements = props.posts.map(post => <Post profileName={post.profileName} text={post.text} />);\r\n    return (\r\n        <div className=\"profile-posts\">\r\n            <div className=\"posts-header\">\r\n                <p>User Posts</p>\r\n            </div>\r\n            <div className=\"posts\">\r\n                {postElements}\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default ProfilePosts;","import ProfilePosts from './ProfilePosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts : state.profilePage.posts\r\n    }\r\n}\r\n\r\n\r\nconst ProfilePostsContainer = connect(mapStateToProps)(ProfilePosts);\r\n\r\nexport default ProfilePostsContainer;","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    }\r\n}","import React from 'react'\r\nimport styles from './Textarea.module.css'\r\n\r\nfunction Textarea({input, meta, ...props}) {\r\n    return (\r\n        <div className={meta.touched && meta.error ? styles.formValidation : null}>\r\n            {meta.touched && meta.error ? <span>{meta.error}</span> : null}\r\n            <textarea {...input} {...props}></textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textarea;","import React from 'react';\r\nimport './ProfileInput.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons'\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport Textarea from '../../common/Textarea/Textarea'\r\n\r\nlet maxLength10 = maxLengthCreator(30);\r\n\r\nfunction ProfileInput(props) {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className=\"post-input\">\r\n                <p className=\"input-header\">What is on your mind?</p>\r\n                <div className=\"input-block\">\r\n                    <Field component={Textarea} name=\"postTextarea\" rows=\"8\" cols=\"70\" placeholder=\"Remember, be nice!\" validate={[required, maxLength10]}></Field>\r\n                    <button className=\"post-btn\"><FontAwesomeIcon icon={faPaperPlane} /></button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInput;","import { connect } from 'react-redux';\r\nimport ProfileInput from './ProfileInput';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst ProfileInputContainer = connect( mapStateToProps)(ProfileInput);\r\n\r\nexport default ProfileInputContainer;","import React from 'react';\r\nimport './Friend.css';\r\n\r\nfunction Friend(props) {\r\n    return (\r\n        <div className=\"friend-item\">\r\n            <img src={props.profileImg} alt=\"friend\"></img>\r\n            <p>{props.profileName}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport './ProfileFriends.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nfunction ProfileFriends(props) {\r\n    \r\n    let friendElements = props.friends.map(friend => <Friend profileImg={friend.profileImg} profileName={friend.profileName} />);\r\n    \r\n    return (\r\n        <div className=\"profile-friends\">\r\n            <div className=\"friends-header\">\r\n                <p>Friends</p>\r\n            </div>\r\n            <div className=\"friends-container\">\r\n                {friendElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileFriends;","import ProfileFriends from './ProfileFriends';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends : state.profilePage.friends\r\n    }\r\n}\r\n\r\nconst ProfileFriendsContainer = connect( mapStateToProps)(ProfileFriends);\r\n\r\nexport default ProfileFriendsContainer;","import React from 'react';\r\nimport './Profile.css';\r\nimport ProfileHeader from './ProfileHeader/ProfileHeader';\r\nimport ProfilePostsContainer from './ProfilePosts/ProfilePostsContainer';\r\nimport ProfileInputContainer from './ProfileInput/ProfileInputContainer';\r\nimport ProfileFriendsContainer from './ProfileFriends/ProfileFriendsContainer';\r\nimport { reduxForm } from 'redux-form'\r\n\r\n\r\n\r\nfunction Profile(props) {\r\n\r\n  const onSubmit = (values) => {\r\n    props.addPost(values.postTextarea)\r\n}\r\n    return (\r\n        <div className=\"profile\">\r\n            <ProfileHeader profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className=\"profile-content\">\r\n              <ProfileFriendsContainer />\r\n              <ProfilePostsContainer />\r\n            </div>\r\n            <PostsReduxForm onSubmit={onSubmit}/>\r\n          </div>\r\n    )\r\n}\r\n\r\nlet PostsReduxForm = reduxForm({form: 'posts'})(ProfileInputContainer)\r\n\r\nexport default Profile;","import { profileAPI } from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_PROFILE_STATUS = 'SET-PROFILE-STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { profileName: 'Username', text: 'What a day to be alive!' },\r\n        { profileName: 'Username', text: 'Hello World!' }\r\n    ],\r\n    friends: [\r\n        { profileName: 'Julius', profileImg: 'https://www.biography.com/.image/t_share/MTY2NjgyMzA1MzM3NzYyODcx/gettyimages-51242589-2048x2048.jpg' },\r\n        { profileName: 'Otto', profileImg: 'https://myhero.com/images/guest/g293101/hero114688/Otto-von-Bismarck-1-4.jpg' }\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nfunction profileReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                profileName: 'Username', text: action.postData\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state.posts.filter(id => id.postId !== action.id)\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                status : action.status\r\n            }\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport const addPost = (postData) => {\r\n    return {\r\n        type: ADD_POST,\r\n        postData\r\n    }\r\n}\r\n\r\nexport const deletePost = (postId) => {\r\n    return { \r\n        type: DELETE_POST,\r\n        postId\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setProfileStatus = (status) => {\r\n    return {\r\n        type : SET_PROFILE_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const setProfile = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.setProfile(userId).then(data => {\r\n            dispatch(setUserProfile(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(data => {\r\n            dispatch(setProfileStatus(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setProfileStatus(status))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { setProfile, getStatus, updateStatus, addPost } from '../../redux/profile-reducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.loggedUserId\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile : state.profilePage.profile,\r\n        status : state.profilePage.status,\r\n        loggedUserId : state.auth.id,\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter, withAuthRedirect,\r\n    connect(mapStateToProps, {setProfile, getStatus, updateStatus, addPost}))(ProfileContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Header.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <header className=\"main-header\">\r\n            <div className=\"logo\">ChatNow</div>\r\n            <div className=\"header-links\">\r\n                <div className=\"login-link\">\r\n                    {props.isAuth ? \r\n                    <div>{props.login} \r\n                        <button onClick={props.logOut} className=\"log-out-btn\">\r\n                            <FontAwesomeIcon icon={faSignOutAlt}/>\r\n                        </button>\r\n                    </div> : <NavLink to={'/login'}>Login</NavLink> }\r\n                </div>\r\n            </div> \r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from 'redux-form'\r\nimport { authAPI, usersAPI } from '../api/api'\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA'\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: { id, email, login, isAuth }\r\n    }\r\n}\r\n\r\nexport const setUser = () => {\r\n    return (dispatch) => {\r\n        return usersAPI.setUser().then(data => {\r\n            if (data.resultCode === 0) {\r\n                let { id, email, login } = data.data;\r\n                dispatch(setUserData(id, email, login, true))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const logIn = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.logIn(email, password, rememberMe).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUser())\r\n            } else {\r\n                let message = data.messages.length > 0 ? data.messages[0] : 'Login error'\r\n                dispatch(stopSubmit('login', {_error : message}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const logOut = () => {\r\n    return (dispatch) => {\r\n        authAPI.logOut().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setUserData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logOut } from '../../redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n\r\n    \r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth,\r\n        login : state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logOut })(HeaderContainer);","import React from 'react'\r\nimport { Field } from 'redux-form';\r\nimport './LoginForm.css'\r\n\r\nfunction LoginForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className=\"login-form\">\r\n            <Field type=\"login\" name=\"email\" placeholder=\"login\" component=\"input\"></Field>\r\n            <Field type=\"password\" name=\"password\" placeholder=\"password\" component=\"input\"></Field>\r\n            <div className=\"remember-check\">\r\n                <p>Remember Me</p>\r\n                <Field type=\"checkbox\" name=\"rememberMe\" component=\"input\"></Field>\r\n            </div>\r\n            <button>Log In</button>\r\n            {props.error ? <div className=\"login-error\">\r\n                {props.error}\r\n            </div> : null}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport './Login.css'\r\nimport LoginForm from './LoginForm/LoginForm'\r\nimport { logIn, logOut} from '../../redux/auth-reducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Login(props) {\r\n    const onSubmit = (formData) => {\r\n        props.logIn(formData.email, formData.password, formData.rememberMe)\r\n        \r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Login Page</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth : state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nexport default connect(mapStateToProps, { logIn, logOut })(Login);","import { setUser } from './auth-reducer'\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED';\r\n\r\n\r\nlet initialState = {\r\n    initialized : false\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_INITIALIZED :\r\n            return {\r\n                ...state,\r\n                initialized : true\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => {\r\n    return {\r\n        type : SET_INITIALIZED\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let dispatchPromise = dispatch(setUser());\r\n        dispatchPromise.then(() => {\r\n            dispatch(setInitialized())\r\n        })\r\n    }\r\n}\r\n\r\nexport default appReducer","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport DialogsPageContainer from './components/DialogsPage/DialogsPageContainer';\nimport FindUsersContainer from './components/FindUsers/FindUsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { initializeApp } from './redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader';\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    \n    return (\n      <div className=\"App\">\n        <HeaderContainer />\n        <section className=\"main-wrapper\">\n          <Nav />\n          <div className=\"content-page\">\n            <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/dialogs' render={() => <DialogsPageContainer />} />\n            <Route path='/users' render={() => <FindUsersContainer />} />\n            <Route path='/login' render={() => <LoginPage />} />\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized\n  }\n}\n\nexport default compose(withRouter, connect(mapStateToProps, { initializeApp }))(App); \n","import profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport authReducer from './auth-reducer';\r\nimport appReducer from './app-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { reducer as formReducer } from 'redux-form'\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport store from './redux/redux-store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/user.7cc7a630.png\";"],"sourceRoot":""}